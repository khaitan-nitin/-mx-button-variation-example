{"version":3,"file":"index.js","sources":["../../src/pipes.ts","../../src/AbilityModule.ts"],"sourcesContent":["import { Pipe, ChangeDetectorRef, Inject, PipeTransform } from '@angular/core';\nimport { PureAbility, Unsubscribe, AnyAbility } from '@casl/ability';\nimport { Observable } from 'rxjs';\n\nclass AbilityPipe<T extends AnyAbility> {\n  protected _unsubscribeFromAbility?: Unsubscribe;\n  private _ability: T;\n  private _cd: ChangeDetectorRef;\n\n  constructor(ability: T, cd: ChangeDetectorRef) {\n    this._ability = ability;\n    this._cd = cd;\n  }\n\n  transform(...args: Parameters<T['can']>): boolean {\n    if (!this._unsubscribeFromAbility) {\n      this._unsubscribeFromAbility = this._ability.on('updated', () => this._cd.markForCheck());\n    }\n    return this._ability.can(...args);\n  }\n\n  ngOnDestroy() {\n    if (this._unsubscribeFromAbility) {\n      this._unsubscribeFromAbility();\n    }\n  }\n}\n\n@Pipe({ name: 'can', pure: false })\nexport class CanPipe<T extends AnyAbility> implements PipeTransform {\n  protected pipe: AbilityPipe<T>;\n\n  constructor(@Inject(PureAbility) ability: T, cd: ChangeDetectorRef) {\n    this.pipe = new AbilityPipe(ability, cd);\n  }\n\n  transform(\n    subject: Parameters<T['can']>[1],\n    action: Parameters<T['can']>[0],\n    field?: string\n  ): boolean {\n    return (this.pipe as any).transform(action, subject, field);\n  }\n\n  ngOnDestroy() {\n    this.pipe.ngOnDestroy();\n  }\n}\n\n@Pipe({ name: 'able', pure: false })\nexport class AblePipe<T extends AnyAbility> implements PipeTransform {\n  protected pipe: AbilityPipe<T>;\n\n  constructor(@Inject(PureAbility) ability: T, cd: ChangeDetectorRef) {\n    this.pipe = new AbilityPipe(ability, cd);\n  }\n\n  transform(...args: Parameters<T['can']>): boolean {\n    return this.pipe.transform(...args);\n  }\n\n  ngOnDestroy() {\n    this.pipe.ngOnDestroy();\n  }\n}\n\n@Pipe({ name: 'ablePure' })\nexport class AblePurePipe<T extends AnyAbility> implements PipeTransform {\n  private _ability: T;\n\n  constructor(@Inject(PureAbility) ability: T) {\n    this._ability = ability;\n  }\n\n  // TODO: `Observable` can be removed after https://github.com/angular/angular/issues/15041\n  transform(...args: Parameters<T['can']>): Observable<boolean> {\n    return new Observable((s) => {\n      const emit = () => s.next(this._ability.can(...args));\n      emit();\n      return this._ability.on('updated', emit);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CanPipe, AblePipe, AblePurePipe } from './pipes';\n\n@NgModule({\n  declarations: [\n    CanPipe,\n    AblePipe,\n    AblePurePipe,\n  ],\n  exports: [\n    CanPipe,\n    AblePipe,\n    AblePurePipe,\n  ],\n})\nexport class AbilityModule {\n}\n"],"names":["Pipe","Inject","PureAbility","ChangeDetectorRef","Observable","NgModule"],"mappings":"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"}