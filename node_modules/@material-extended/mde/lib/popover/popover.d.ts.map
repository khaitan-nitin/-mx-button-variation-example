{"version":3,"file":"popover.d.ts","sources":["popover.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnDestroy, TemplateRef, ElementRef, NgZone } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { MdePopoverPositionX, MdePopoverPositionY, MdePopoverTriggerEvent } from './popover-types';\nimport { MdePopoverPanel } from './popover-interfaces';\nexport declare class MdePopover implements MdePopoverPanel, OnDestroy {\n    private _elementRef;\n    zone: NgZone;\n    role: string;\n    /** Settings for popover, view setters and getters for more detail */\n    private _positionX;\n    private _positionY;\n    private _triggerEvent;\n    private _enterDelay;\n    private _leaveDelay;\n    private _overlapTrigger;\n    private _disableAnimation;\n    private _targetOffsetX;\n    private _targetOffsetY;\n    private _arrowOffsetX;\n    private _arrowWidth;\n    private _arrowColor;\n    private _closeOnClick;\n    private _focusTrapEnabled;\n    private _focusTrapAutoCaptureEnabled;\n    /** Config object to be passed into the popover's ngClass */\n    _classList: {\n        [key: string]: boolean;\n    };\n    /** */\n    containerPositioning: boolean;\n    /** Closing disabled on popover */\n    closeDisabled: boolean;\n    /** Config object to be passed into the popover's arrow ngStyle */\n    popoverPanelStyles: {};\n    /** Config object to be passed into the popover's arrow ngStyle */\n    popoverArrowStyles: {};\n    /** Config object to be passed into the popover's content ngStyle */\n    popoverContentStyles: {};\n    /** Emits the current animation state whenever it changes. */\n    _onAnimationStateChange: EventEmitter<AnimationEvent>;\n    /** Position of the popover in the X axis. */\n    get positionX(): MdePopoverPositionX;\n    set positionX(value: MdePopoverPositionX);\n    /** Position of the popover in the Y axis. */\n    get positionY(): MdePopoverPositionY;\n    set positionY(value: MdePopoverPositionY);\n    /** Popover trigger event */\n    get triggerEvent(): MdePopoverTriggerEvent;\n    set triggerEvent(value: MdePopoverTriggerEvent);\n    /** Popover enter delay */\n    get enterDelay(): number;\n    set enterDelay(value: number);\n    /** Popover leave delay */\n    get leaveDelay(): number;\n    set leaveDelay(value: number);\n    /** Popover overlap trigger */\n    get overlapTrigger(): boolean;\n    set overlapTrigger(value: boolean);\n    /** Popover target offset x */\n    get targetOffsetX(): number;\n    set targetOffsetX(value: number);\n    /** Popover target offset y */\n    get targetOffsetY(): number;\n    set targetOffsetY(value: number);\n    /** Popover arrow offset x */\n    get arrowOffsetX(): number;\n    set arrowOffsetX(value: number);\n    /** Popover arrow width */\n    get arrowWidth(): number;\n    set arrowWidth(value: number);\n    /** Popover arrow color */\n    get arrowColor(): string;\n    set arrowColor(value: string);\n    /**\n     * Popover container close on click\n     * default: true\n     */\n    get closeOnClick(): boolean;\n    set closeOnClick(value: boolean);\n    /**\n     * Disable animations of popover and all child elements\n     * default: false\n     */\n    get disableAnimation(): boolean;\n    set disableAnimation(value: boolean);\n    /**\n     * Popover focus trap using cdkTrapFocus\n     * default: true\n     */\n    get focusTrapEnabled(): boolean;\n    set focusTrapEnabled(value: boolean);\n    /**\n     * Popover focus trap auto capture using cdkTrapFocusAutoCapture\n     * default: true\n     */\n    get focusTrapAutoCaptureEnabled(): boolean;\n    set focusTrapAutoCaptureEnabled(value: boolean);\n    /**\n     * This method takes classes set on the host md-popover element and applies them on the\n     * popover template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing popover from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes: string);\n    /**\n     * This method takes classes set on the host md-popover element and applies them on the\n     * popover template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing popover from outside the component.\n     * @deprecated Use `panelClass` instead.\n     */\n    get classList(): string;\n    set classList(classes: string);\n    /** Event emitted when the popover is closed. */\n    close: EventEmitter<void>;\n    templateRef: TemplateRef<any>;\n    constructor(_elementRef: ElementRef, zone: NgZone);\n    ngOnDestroy(): void;\n    /** Handle a keyboard event from the popover, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent): void;\n    /**\n     * This emits a close event to which the trigger is subscribed. When emitted, the\n     * trigger will close the popover.\n     */\n    _emitCloseEvent(): void;\n    /** Close popover on click if closeOnClick is true */\n    onClick(): void;\n    /**\n     * TODO: Refactor when @angular/cdk includes feature I mentioned on github see link below.\n     * https://github.com/angular/material2/pull/5493#issuecomment-313085323\n     */\n    /** Disables close of popover when leaving trigger element and mouse over the popover */\n    onMouseOver(): void;\n    /** Enables close of popover when mouse leaving popover element */\n    onMouseLeave(): void;\n    /** Sets the current styles for the popover to allow for dynamically changing settings */\n    setCurrentStyles(): void;\n    /**\n     * It's necessary to set position-based classes to ensure the popover panel animation\n     * folds out from the correct direction.\n     */\n    setPositionClasses(posX?: MdePopoverPositionX, posY?: MdePopoverPositionY): void;\n}\n"]}